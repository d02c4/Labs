#include <iostream>
#include <stack> // подключаем библиотеку stack

using namespace std;


void InitSize(int* size) // функция для ввода размера стека
{
	cout << "Введите размер стека: \t";
	cin >> *size;
	while (*size < 1)
	{
		cout << "Введен некорректный размер стека!" << endl;
		cout << "Введите размер стека: \t";
		cin >> *size;
	}
}

void StackInit(stack<double>& st, int size) // функция создания стека
{
	double a; // выделение память под верменную переменную
	for (int i = 0; i < size; i++) // проходимся от 0 до размера стека
	{
		cout << "Введите " << i + 1 << " элемент стека:\t";
		cin >> a; // пользователь указывает значение информационного поля для каждого элемента стека
		st.push(a); // элемент кладется в стек
	}
}

void EditStack(stack<double> &st, int *size) // функция редактирования стека
{
	stack<double> Dst; // выделтение память под временный стек
	for (int i = 0; i < *size; i++) // проходимя по всему стеку и заполняем новый стек, только данный стек будет развернут по отношению к первому
	{
		Dst.push(st.top()); // первый элемент становится последним в новом стеке и так далее
		st.pop(); // вынимаем верхний элемент старого стека, в итоге старый стек станет пустым
	}
	for (int i = 0; i < *size; i++) // проходимся по всем элементам нового стека
	{
		if (Dst.top() < 0) // проверяем все элементы стека на отрицательность
		{
			st.push(Dst.top()); // кладем верхний элемент нового стека в старый стек
			st.push(0); // после этого кладем новый элемент равный 0
		}
		else
		{
			st.push(Dst.top()); // кладем верхний элемент нового стека в старый стек 
		}
		Dst.pop(); // достаем из нового стека верхний элемент
	}
	*size = st.size(); // кладем верхний элемент нового стека в старый стек изменяем значение размера стека на получившийся размер
}

void PrintStack(stack<double> st, int size) // функция печати всех элементов стека
{
	cout << endl << endl;
	if (size == 0) // проверка размера стека на 0
	{
		cout << "Стек пуст!\n";
	}
	else
	{
		for (int i = 0; i < size; i++) // прозодимся во всем элементам стека
		{
			cout << st.top() << " "; // выводим каждый элемент стека в консоль
			st.pop(); // достаем верхний элемент из стека
		}
	}
}

int main()
{
	setlocale(LC_ALL, "Ru");
	int size;
	InitSize(&size);
	stack<double> st;
	StackInit(st, size);
	PrintStack(st, size);
	EditStack(st, &size);
	PrintStack(st, size);
}
